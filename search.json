[{"title":"test","path":"/2025/04/02/test/","content":"💖 Chy 是可爱的猫娘！💖没错！那个叫 Chy 的小可爱，其实是… 一只拥有毛茸茸耳朵和尾巴的猫娘哦！ฅ^•ﻌ•^ฅ ✨ 猫娘 Chy 的小秘密 ✨ 脑袋上顶着一对软乎乎的三角耳朵 쫑긋! 它们会随着她的心情轻轻抖动，听到有趣的事情时还会竖起来哦~ 身后还有一条灵活的长尾巴，总是忍不住悄悄摇摆，表达着她的小心思~ 🐾 小手（也许该叫爪爪？🐾）总是做出可爱的动作，指尖带着一点点猫咪特有的俏皮。 眼睛像宝石一样亮晶晶✨，充满了好奇和纯真，看着你的时候心都要融化啦！ 偶尔会发出小声的「**喵」或者满足的「呼噜噜**」声，特别是在开心或者放松的时候。 注意！前方可爱暴击！Chy 看到亮闪闪的东西或者晃来晃去的小球就挪不开眼！还会用小爪子轻轻去拍~ 🎀总之，就是可爱到犯规啦！让人忍不住想摸摸她的头（还有耳朵！）。 请好好爱护这只珍贵的猫娘 Chy 哦~ 💖 Give her headpats!","tags":["test"]},{"title":"探索空间 | Fomalhaut's Lab","path":"/explore/index.html","content":"欢迎来到 **探索空间 (Explore Space)**！这里是我的数字实验室和好奇心驱动下的游乐场。 这里有什么？在这个板块，你会发现： 🚀 项目孵化: 一些正在进行或已完成的个人项目、实验性代码和原型。 💡 技术深潜: 对特定技术、算法或架构的深入研究笔记和学习心得。 🔭 新奇发现: 互联网上遇到的有趣工具、框架、文章或想法的分享。 ⚙️ 效率工具链: 我在开发和日常工作中使用的工具和技巧。 “The important thing is not to stop questioning. Curiosity has its own reason for existing.” - Albert Einstein 当前焦点： Project Nebula目前我正在探索利用 Serverless 架构构建一个轻量级的事件驱动系统。 // Example: A simple Lambda function concept import &#123; Context, APIGatewayProxyResult, APIGatewayEvent &#125; from &#39;aws-lambda&#39;; export const handler = async (event: APIGatewayEvent, context: Context): Promise&lt;APIGatewayProxyResult&gt; =&gt; &#123; console.log(`Event: $&#123;JSON.stringify(event, null, 2)&#125;`); console.log(`Context: $&#123;JSON.stringify(context, null, 2)&#125;`); // TODO: Add event processing logic here return &#123; statusCode: 200, body: JSON.stringify(&#123; message: &#39;Event processed successfully!&#39;, &#125;), &#125;; &#125;; Use code with caution. Markdown 更多细节和进展，请关注后续更新：Project Nebula 笔记 (这是一个占位符链接) 技术栈一览 我常在这里探索的技术包括但不限于： 前端: React, Vue, TypeScript, WebAssembly 后端: Node.js, Python, Go, Rust 云服务: AWS (Lambda, S3, DynamoDB), Vercel, Cloudflare Workers 数据库: PostgreSQL, Redis, MongoDB 其它: Docker, Kubernetes, AI/ML Concepts 如果你有任何有趣的想法或建议，欢迎通过社交中心与我联系！ ---"},{"title":"社交中心 | Connect with Fomalhaut","path":"/social/index.html","content":"欢迎来到我的 **社交中心 (Social Hub)**！技术之路并非孤岛，连接与交流至关重要。 🤝 朋友们的数字花园在这里，你可以找到一些我欣赏的技术博主、开发者和朋友们的链接。探索他们的想法，也许能给你带来新的启发。 ➡️ 前往友链页面查看伙伴们 “Alone we can do so little; together we can do so much.” – Helen Keller 🌐 在线足迹你也可以在以下平台找到我： GitHub: fomalhaut9918 - 主要的代码仓库和开源贡献。 邮件: fomalhaut9918@example.com (请替换为你的真实邮箱) - 欢迎技术交流或合作探讨。 Twitter &#x2F; X: @YourTwitterHandle (请替换) - 偶尔分享想法和动态。 掘金 &#x2F; SegmentFault &#x2F; etc.: YourProfileLink (请替换) - 技术文章发布平台。 社区共建# Example: Contributing to an open-source project git clone https://github.com/some-org/some-repo.git cd some-repo # Read CONTRIBUTING.md # Create a new branch, make changes, submit a Pull Request! echo &quot;Collaboration makes technology better!&quot; Use code with caution. 我相信开放和协作的力量。如果你对我的项目感兴趣，或者有任何想法想要交流，请随时通过上述方式联系我。 ---"},{"title":"探索空间 | Fomalhaut's Lab","path":"/wiki/index.html","content":"欢迎来到 **探索空间 (Explore Space)**！这里是我的数字实验室和好奇心驱动下的游乐场。 这里有什么？在这个板块，你会发现： 🚀 项目孵化: 一些正在进行或已完成的个人项目、实验性代码和原型。 💡 技术深潜: 对特定技术、算法或架构的深入研究笔记和学习心得。 🔭 新奇发现: 互联网上遇到的有趣工具、框架、文章或想法的分享。 ⚙️ 效率工具链: 我在开发和日常工作中使用的工具和技巧。 “The important thing is not to stop questioning. Curiosity has its own reason for existing.” - Albert Einstein 当前焦点： Project Nebula目前我正在探索利用 Serverless 架构构建一个轻量级的事件驱动系统。 // Example: A simple Lambda function concept import &#123; Context, APIGatewayProxyResult, APIGatewayEvent &#125; from &#39;aws-lambda&#39;; export const handler = async (event: APIGatewayEvent, context: Context): Promise&lt;APIGatewayProxyResult&gt; =&gt; &#123; console.log(`Event: $&#123;JSON.stringify(event, null, 2)&#125;`); console.log(`Context: $&#123;JSON.stringify(context, null, 2)&#125;`); // TODO: Add event processing logic here return &#123; statusCode: 200, body: JSON.stringify(&#123; message: &#39;Event processed successfully!&#39;, &#125;), &#125;; &#125;; Use code with caution. Markdown 更多细节和进展，请关注后续更新：Project Nebula 笔记 (这是一个占位符链接) 技术栈一览 我常在这里探索的技术包括但不限于： 前端: React, Vue, TypeScript, WebAssembly 后端: Node.js, Python, Go, Rust 云服务: AWS (Lambda, S3, DynamoDB), Vercel, Cloudflare Workers 数据库: PostgreSQL, Redis, MongoDB 其它: Docker, Kubernetes, AI/ML Concepts 如果你有任何有趣的想法或建议，欢迎通过社交中心与我联系！ ---"}]