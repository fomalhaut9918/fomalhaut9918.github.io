[{"title":"test","path":"/2025/04/02/test/","content":"💖 Chy 是可爱的猫娘！💖 💖 Chy 是可爱的猫娘！💖没错！那个叫 Chy 的小可爱，其实是… 一只拥有毛茸茸耳朵和尾巴的猫娘哦！ฅ^•ﻌ•^ฅ ✨ 猫娘 Chy 的小秘密 ✨ 脑袋上顶着一对软乎乎的三角耳朵 쫑긋! 它们会随着她的心情轻轻抖动，听到有趣的事情时还会竖起来哦~ 身后还有一条灵活的长尾巴，总是忍不住悄悄摇摆，表达着她的小心思~ 🐾 小手（也许该叫爪爪？🐾）总是做出可爱的动作，指尖带着一点点猫咪特有的俏皮。 眼睛像宝石一样亮晶晶✨，充满了好奇和纯真，看着你的时候心都要融化啦！ 偶尔会发出小声的「**喵」或者满足的「呼噜噜**」声，特别是在开心或者放松的时候。 注意！前方可爱暴击！Chy 看到亮闪闪的东西或者晃来晃去的小球就挪不开眼！还会用小爪子轻轻去拍~ 🎀总之，就是可爱到犯规啦！让人忍不住想摸摸她的头（还有耳朵！）。 请好好爱护这只珍贵的猫娘 Chy 哦~ 💖 Give her headpats!","tags":["test"]},{"title":"Welcome to my blog!","path":"/wiki/blog/index.html","content":"欢迎光临！"},{"title":"Some simple games","path":"/wiki/game/index.html","content":"欢迎光临！ 下面是一个响应 WASD 键控制、制作精美的贪吃蛇小游戏。点击“开始”按钮启动游戏，并使用 WASD 键控制移动。吃掉红色方块可计分，碰到边界或蛇身将导致游戏结束，结束后可点击“重新开始”按钮重新游戏。 点击开始游戏 开始 (function() { const canvas = document.getElementById('snakeCanvas'); const ctx = canvas.getContext('2d'); const box = 20; const canvasSize = 600; let snake, food, direction, score, gameOver, gameInterval; const gameMessage = document.getElementById('gameMessage'); const startBtn = document.getElementById('startBtn'); // 初始化游戏状态 function initGame() { snake = [ { x: Math.floor(canvasSize / (2 * box)) * box, y: Math.floor(canvasSize / (2 * box)) * box } ]; food = generateFood(); direction = 'RIGHT'; score = 0; gameOver = false; gameMessage.innerText = \"\"; startBtn.style.display = 'none'; } // 生成食物，确保不在蛇身上 function generateFood() { let foodItem; do { foodItem = { x: Math.floor(Math.random() * (canvasSize / box)) * box, y: Math.floor(Math.random() * (canvasSize / box)) * box }; } while (collision(foodItem.x, foodItem.y, snake)); return foodItem; } // 碰撞检测：检测给定坐标是否与蛇的任一部分重合 function collision(x, y, array) { for (let i = 0; i < array.length; i++) { if (x === array[i].x && y === array[i].y) return true; } return false; } // 绘制当前游戏状态 function drawGame() { if (gameOver) { clearInterval(gameInterval); showGameOver(); return; } // 清除画布并绘制背景 ctx.clearRect(0, 0, canvasSize, canvasSize); ctx.fillStyle = \"#f0f0f0\"; ctx.fillRect(0, 0, canvasSize, canvasSize); // 绘制食物 ctx.fillStyle = \"red\"; ctx.fillRect(food.x, food.y, box, box); // 绘制蛇体 for (let i = 0; i < snake.length; i++) { ctx.fillStyle = i === 0 ? \"#3288e6\" : \"#66c2a5\"; ctx.fillRect(snake[i].x, snake[i].y, box, box); ctx.strokeStyle = \"white\"; ctx.strokeRect(snake[i].x, snake[i].y, box, box); } // 计算蛇头的新位置 let headX = snake[0].x; let headY = snake[0].y; if (direction === 'LEFT') headX -= box; if (direction === 'RIGHT') headX += box; if (direction === 'UP') headY -= box; if (direction === 'DOWN') headY += box; // 检查边界碰撞 if (headX < 0 || headY < 0 || headX >= canvasSize || headY >= canvasSize) { gameOver = true; } // 检查自身碰撞 if (collision(headX, headY, snake)) { gameOver = true; } if (gameOver) { drawGameOverScreen(); showGameOver(); return; } // 将新头部加入蛇中 let newHead = { x: headX, y: headY }; snake.unshift(newHead); // 如果吃掉食物，则计分并生成新食物，否则移除蛇尾 if (headX === food.x && headY === food.y) { score++; food = generateFood(); } else { snake.pop(); } // 绘制当前分数 ctx.fillStyle = \"black\"; ctx.font = \"20px Arial\"; ctx.textAlign = \"left\"; ctx.fillText(\"Score: \" + score, 5, canvasSize - 10); } // 绘制游戏结束画面 function drawGameOverScreen() { ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\"; ctx.fillRect(0, 0, canvasSize, canvasSize); ctx.fillStyle = \"white\"; ctx.font = \"30px Arial\"; ctx.textAlign = \"center\"; ctx.fillText(\"Game Over\", canvasSize / 2, canvasSize / 2 - 20); } // 显示结束信息及重新开始按钮 function showGameOver() { gameMessage.innerText = \"游戏结束，最终得分：\" + score; startBtn.innerText = \"重新开始\"; startBtn.style.display = \"inline-block\"; } // 监听 WASD 键盘事件控制方向 document.addEventListener('keydown', function(event) { if (!gameOver) { switch(event.key.toLowerCase()){ case 'w': if (direction !== 'DOWN') direction = 'UP'; break; case 'a': if (direction !== 'RIGHT') direction = 'LEFT'; break; case 's': if (direction !== 'UP') direction = 'DOWN'; break; case 'd': if (direction !== 'LEFT') direction = 'RIGHT'; break; } } }); // 开始/重新开始按钮事件监听 startBtn.addEventListener('click', function(){ initGame(); clearInterval(gameInterval); gameInterval = setInterval(drawGame, 100); }); // 初始提示信息 gameMessage.innerText = \"点击开始游戏\"; })(); 使用 WASD 键操控方向，挑战你的反应速度！"}]